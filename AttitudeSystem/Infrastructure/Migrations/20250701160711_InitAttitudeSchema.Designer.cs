// <auto-generated />
using System;
using AttitudeSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AttitudeSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250701160711_InitAttitudeSchema")]
    partial class InitAttitudeSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.AttitudeRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Assignment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Attendance")
                        .HasColumnType("bit");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Respect")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SiteTasks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WeekId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("WeekId");

                    b.ToTable("AttitudeRecords");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StoredFileName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("GuardianPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<Guid?>("PrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VicePrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("VicePrincipalId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("Role");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Week", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Manager", b =>
                {
                    b.HasBaseType("AttitudeSystem.Domain.Entities.User");

                    b.PrimitiveCollection<string>("Messages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users", t =>
                        {
                            t.Property("Messages")
                                .HasColumnName("Manager_Messages");
                        });

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Principal", b =>
                {
                    b.HasBaseType("AttitudeSystem.Domain.Entities.User");

                    b.PrimitiveCollection<string>("Messages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users", t =>
                        {
                            t.Property("Messages")
                                .HasColumnName("Principal_Messages");
                        });

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Teacher", b =>
                {
                    b.HasBaseType("AttitudeSystem.Domain.Entities.User");

                    b.PrimitiveCollection<string>("Messages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.VicePrincipal", b =>
                {
                    b.HasBaseType("AttitudeSystem.Domain.Entities.User");

                    b.PrimitiveCollection<string>("Messages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users", t =>
                        {
                            t.Property("Messages")
                                .HasColumnName("VicePrincipal_Messages");
                        });

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.AttitudeRecord", b =>
                {
                    b.HasOne("AttitudeSystem.Domain.Entities.Student", "Student")
                        .WithMany("Attitudes")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttitudeSystem.Domain.Entities.Week", null)
                        .WithMany("Attitudes")
                        .HasForeignKey("WeekId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Report", b =>
                {
                    b.HasOne("AttitudeSystem.Domain.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Student", b =>
                {
                    b.HasOne("AttitudeSystem.Domain.Entities.Manager", null)
                        .WithMany("ProblemStudents")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AttitudeSystem.Domain.Entities.Principal", null)
                        .WithMany("Students")
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AttitudeSystem.Domain.Entities.Teacher", null)
                        .WithMany("Students")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AttitudeSystem.Domain.Entities.VicePrincipal", null)
                        .WithMany("Students")
                        .HasForeignKey("VicePrincipalId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Student", b =>
                {
                    b.Navigation("Attitudes");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Week", b =>
                {
                    b.Navigation("Attitudes");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Manager", b =>
                {
                    b.Navigation("ProblemStudents");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Principal", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.Teacher", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AttitudeSystem.Domain.Entities.VicePrincipal", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
